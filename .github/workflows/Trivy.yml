name: CI/CD with Aqua Trivy Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make gradlew executable
        run: chmod +x Demo/gradlew

      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1

      - name: Change to Demo directory
        run: cd Demo && ls -l  # Verify gradlew is present

      # Build the project using Gradle Wrapper
      - name: Build the JAR file
        run: cd Demo && ./gradlew build

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./Demo          # Directory where your Dockerfile is
          push: true               # This tells GitHub Actions to push the image
          tags: ghcr.io/${{ github.repository_owner }}/demo:latest
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
          
       # Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.29.2/trivy_0.29.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.29.2_Linux-64bit.deb

      # Check if Trivy is installed
      - name: Check if Trivy is installed
        run: which trivy || echo "Trivy is not installed"
             trivy --version || echo "Trivy version not found"
             
      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: cache-trivy-${{ runner.os }}-${{ hashFiles('**/trivy-db.tar.gz') }}
          restore-keys: |
              cache-trivy-${{ runner.os }}-
          
      - name: Retry DB download with exponential backoff
        run: |
              MAX_RETRIES=5
              RETRY_DELAY=60
              for ((i=1; i<=MAX_RETRIES; i++)); do
              echo "Attempt #$i"
              if trivy image --download-db-only ghcr.io/aquasecurity/trivy-db:2; then
              echo "DB download successful"
              break
              else
              echo "Attempt #$i failed, retrying in $RETRY_DELAY seconds"
              sleep $RETRY_DELAY
              RETRY_DELAY=$((RETRY_DELAY * 2))  # Double the delay for the next retry
              fi
              done
        continue-on-error: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: vishalyadav-bnt
          password: ${{ secrets.GHCR_PAT }}

      - name: Pull Docker image locally
        run: docker pull ghcr.io/${{ github.repository_owner }}/demo:latest
         
      - name: Scan Docker image with Trivy
        run: trivy image --format sarif --output trivy-report.sarif ghcr.io/${{ github.repository_owner }}/demo:latest


      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-report.sarif
